// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EnterServer Render should render 1`] = `
<ScrollViewMock
  contentContainerStyle={
    Object {
      "flexGrow": 1,
    }
  }
  keyboardDismissMode="on-drag"
  keyboardShouldPersistTaps="handled"
  testID="enterServer"
>
  <View
    style={
      Object {
        "backgroundColor": "#FFF",
        "flexDirection": "column",
        "flexGrow": 1,
        "justifyContent": "space-between",
        "paddingLeft": 32,
        "paddingRight": 32,
      }
    }
  >
    <TouchableOpacity
      activeOpacity={0.2}
      onPress={[Function]}
      style={
        Object {
          "flexGrow": 0,
          "marginLeft": -32,
          "padding": 16,
          "width": 72,
        }
      }
      testID="enterServerBackButton"
    >
      <IconBack />
    </TouchableOpacity>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
          "marginTop": 16,
        }
      }
    >
      <TouchableWithoutFeedback
        onPress={[Function]}
        testID="enterServerLogo"
      >
        <Image
          source={
            Object {
              "testUri": "../../../src/components/icon/youtrack-logo-512.png",
            }
          }
          style={
            Object {
              "height": 80,
              "resizeMode": "contain",
            }
          }
        />
      </TouchableWithoutFeedback>
      <View
        testID="enterServerHint"
      >
        <Text
          style={
            Object {
              "fontSize": 18,
              "fontWeight": "500",
              "marginTop": 16,
              "textAlign": "center",
            }
          }
        >
          Enter YouTrack URL
        </Text>
      </View>
      <TextInput
        allowFontScaling={true}
        autoCapitalize="none"
        autoCorrect={false}
        autoFocus={true}
        keyboardType="url"
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="youtrack-server.com:PORT"
        rejectResponderTermination={true}
        returnKeyType="done"
        selectTextOnFocus={true}
        style={
          Object {
            "backgroundColor": "#f6f6f6",
            "borderRadius": 8,
            "color": "#000",
            "fontSize": 16,
            "marginBottom": 16,
            "marginTop": 24,
            "padding": 12,
            "paddingLeft": 8,
            "paddingRight": 8,
            "width": "100%",
          }
        }
        testID="server-url"
        underlineColorAndroid="transparent"
        value="http://example.com"
      />
      <TouchableOpacity
        activeOpacity={0.2}
        disabled={false}
        onPress={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#FE0082",
              "borderRadius": 8,
              "padding": 12,
              "width": "100%",
            },
            null,
          ]
        }
        testID="next"
      >
        <Text
          style={
            Object {
              "alignSelf": "center",
              "color": "#FFF",
              "fontSize": 16,
              "textAlign": "center",
            }
          }
        >
          Next
        </Text>
      </TouchableOpacity>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "marginBottom": 16,
          "marginTop": 16,
        }
      }
      testID="enterServerSupportLink"
    >
      <TouchableOpacity
        activeOpacity={0.2}
        hitSlop={
          Object {
            "bottom": 8,
            "left": 8,
            "right": 8,
            "top": 8,
          }
        }
        onPress={[Function]}
      >
        <Text
          style={
            Object {
              "color": "#FE0082",
            }
          }
        >
          Contact support
        </Text>
      </TouchableOpacity>
    </View>
    <KeyboardSpacer
      onToggle={[Function]}
      topSpacing={0}
    />
  </View>
</ScrollViewMock>
`;
